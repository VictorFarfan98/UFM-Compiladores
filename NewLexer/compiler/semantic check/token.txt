['keywords', 'class', 1, 'program']
['ID', 'Program', 1, 'program']
['Delimiter', '{', 2, 'program']
['keywords', 'int', 3, 'field_dec']
['ID', 'arr', 3, 'field_dec']
['Delimiter', '[', 3, 'field_dec']
['decimal', '1', 3, 'field_dec']
['Delimiter', ']', 3, 'field_dec']
['Delimiter', ';', 3, 'field_dec']
['keywords', 'int', 4, 'field_dec']
['ID', 'arr1', 4, 'field_dec']
['Delimiter', '[', 4, 'field_dec']
['decimal', '1', 4, 'field_dec']
['Delimiter', ']', 4, 'field_dec']
['Delimiter', ';', 4, 'field_dec']
['keywords', 'int', 6, 'method_dec']
['ID', 'IF', 6, 'method_dec']
['Delimiter', '(', 6, 'method_dec']
['keywords', 'int', 6, 'method_dec']
['ID', 'val', 6, 'method_dec']
['Delimiter', ',', 6, 'method_dec']
['keywords', 'int', 6, 'method_dec']
['ID', 'val1', 6, 'method_dec']
['Delimiter', ')', 6, 'method_dec']
['Delimiter', '{', 7, 'block']
['keywords', 'boolean', 8, 'var_decl']
['ID', 'b', 8, 'var_decl']
['Delimiter', ';', 8, 'var_decl']
['keywords', 'return', 9, 'statement']
['Delimiter', '(', 9, 'expr']
['ID', 'val', 9, 'expr']
['Operator', '+', 9, 'expr']
['decimal', '1', 9, 'expr']
['Delimiter', ')', 9, 'expr']
['Delimiter', ';', 9, 'statement']
['Delimiter', '}', 10, 'block']
['keywords', 'void', 12, 'method_dec']
['ID', 'newmethod', 12, 'method_dec']
['Delimiter', '(', 12, 'method_dec']
['Delimiter', ')', 12, 'method_dec']
['Delimiter', '{', 13, 'block']
['keywords', 'int', 14, 'var_decl']
['ID', 'x', 14, 'var_decl']
['Delimiter', ';', 14, 'var_decl']
['Delimiter', '}', 16, 'block']
['keywords', 'void', 18, 'method_dec']
['ID', 'main', 18, 'method_dec']
['Delimiter', '(', 18, 'method_dec']
['Delimiter', ')', 18, 'method_dec']
['Delimiter', '{', 19, 'block']
['keywords', 'int', 20, 'var_decl']
['ID', 'ern3t', 20, 'var_decl']
['Delimiter', ',', 20, 'var_decl']
['ID', 'i', 20, 'var_decl']
['Delimiter', ',', 20, 'var_decl']
['ID', 'j', 20, 'var_decl']
['Delimiter', ';', 20, 'var_decl']
['keywords', 'int', 21, 'var_decl']
['ID', 'array', 21, 'var_decl']
['Delimiter', ';', 21, 'var_decl']
['keywords', 'int', 22, 'var_decl']
['ID', 'hola', 22, 'var_decl']
['Delimiter', ';', 22, 'var_decl']
['keywords', 'boolean', 23, 'var_decl']
['ID', 'thisfortrue', 23, 'var_decl']
['Delimiter', ';', 23, 'var_decl']
['keywords', 'callout', 25, 'method_call']
['Delimiter', '(', 25, 'method_call']
['string', '"\\tThis is my program!\\n"', 25, 'method_call']
['Delimiter', ')', 25, 'method_call']
['Delimiter', ';', 25, 'statement']
['ID', 'hola', 26, 'location']
['Operator', '=', 26, 'statement']
['decimal', '10', 26, 'expr']
['Operator', '+', 26, 'expr']
['ID', 'array', 26, 'expr']
['Operator', '+', 26, 'expr']
['decimal', '1', 26, 'expr']
['Delimiter', ';', 26, 'statement']
['ID', 'array', 27, 'location']
['Operator', '=', 27, 'statement']
['decimal', '1', 27, 'expr']
['Delimiter', ';', 27, 'statement']
['ID', 'array', 28, 'location']
['Delimiter', '[', 28, 'location']
['hexadecimal', '0xa', 28, 'expr']
['Delimiter', ']', 28, 'location']
['Operator', '+=', 28, 'statement']
['ID', 'IF', 28, 'method_call']
['Delimiter', '(', 28, 'method_call']
['Delimiter', ')', 28, 'method_call']
['Delimiter', ';', 28, 'statement']
['Delimiter', '}', 29, 'block']
['Delimiter', '}', 30, 'program']
