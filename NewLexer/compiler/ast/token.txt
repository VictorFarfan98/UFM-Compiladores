['keywords', 'class', 1, 'program']
['ID', 'Program', 1, 'program']
['Delimiter', '{', 2, 'program']
['keywords', 'void', 4, 'method_dec']
['ID', 'main', 4, 'method_dec']
['Delimiter', '(', 4, 'method_dec']
['Delimiter', ')', 4, 'method_dec']
['Delimiter', '{', 5, 'block']
['keywords', 'int', 6, 'var_decl']
['ID', 'i', 6, 'var_decl']
['Delimiter', ';', 6, 'var_decl']
['keywords', 'for', 7, 'statement']
['ID', 'i', 7, 'statement']
['Operator', '=', 7, 'statement']
['decimal', '1', 7, 'expr']
['Delimiter', ',', 7, 'statement']
['ID', 'i', 7, 'expr']
['Operator', '<', 7, 'expr']
['decimal', '25', 7, 'expr']
['Delimiter', '{', 8, 'block']
['keywords', 'int', 9, 'var_decl']
['ID', 'j', 9, 'var_decl']
['Delimiter', ';', 9, 'var_decl']
['keywords', 'if', 10, 'statement']
['Delimiter', '(', 10, 'statement']
['keywords', 'true', 10, 'expr']
['Delimiter', ')', 10, 'statement']
['Delimiter', '{', 10, 'block']
['keywords', 'break', 11, 'statement']
['Delimiter', ';', 11, 'statement']
['Delimiter', '}', 12, 'block']
['Delimiter', '}', 13, 'block']
['keywords', 'callout', 14, 'method_call']
['Delimiter', '(', 14, 'method_call']
['string', '"\\tThis is my program!\\n"', 14, 'method_call']
['Delimiter', ')', 14, 'method_call']
['Delimiter', ';', 14, 'statement']
['Delimiter', '}', 16, 'block']
['Delimiter', '}', 17, 'program']
